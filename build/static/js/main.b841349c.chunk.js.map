{"version":3,"sources":["components/Form/Form.jsx","components/ErrorBoundary/ErrorBoundary.jsx","components/UserPage/UserPage.jsx","containers/UserPage.js","App.js","reportWebVitals.js","index.js"],"names":["Form","title","size","onSubmit","counter","initialValues","Error","defaultProps","ErrorBoundary","props","state","hasError","errorInfo","error","this","setState","children","React","Component","UserPage","initialData","useState","setCounter","type","onClick","console","log","UserPageContainer","formData","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sJAIA,SAASA,EAAT,GAA+D,EAAhDC,MAAgD,EAAzCC,KAA0C,IAApCC,EAAmC,EAAnCA,SAAmC,EAAzBC,QAAyB,EAAhBC,cAI3C,MAFAF,EAAS,wBAEH,IAAIG,MAAM,eA0BpBN,EAAKO,aAAe,CAChBH,QAAS,GAGEJ,Q,4BCpCMQ,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAAEC,UAAU,EAAOC,UAAW,MAF5B,E,8DAKDC,EAAOD,GACtBE,KAAKC,SAAS,CACVJ,WAAYE,EACZD,gB,+BAKH,OAAIE,KAAKJ,MAAMC,SACJ,uDAEJG,KAAKL,MAAMO,a,GAjBiBC,IAAMC,WCiClCC,MA/Bf,YAA4C,IAAzBhB,EAAwB,EAAxBA,SAAwB,KAAdiB,YAGKC,mBAAS,IAHA,mBAGhCjB,EAHgC,KAGvBkB,EAHuB,KAoBvC,OACI,qCACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAMrB,MAtBA,qBAsBkBC,KArBlB,EAqBmCC,SAAUA,EAAUE,cARnD,CAClBJ,MAAO,WACPC,KAAM,QAQF,wBAAQqB,KAAK,SAASC,QApBN,WACpBC,QAAQC,IAAI,YACZJ,EAAWlB,EAAU,IAkBjB,oBACA,wBAAQmB,KAAK,SAASC,QAhBL,WACrBC,QAAQC,IAAI,YACZJ,EAAWlB,EAAU,IAcjB,wBChBGuB,MAZf,WAOI,OACI,cAAC,EAAD,CAAUxB,SANO,SAACyB,GAElBH,QAAQC,IAAIE,IAIsBR,YAPlB,MCOTS,MARf,WACI,OACI,mCACI,cAAC,EAAD,OCOGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b841349c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport Text from './components/Text/Text';\n\nfunction Form({title, size, onSubmit, counter, initialValues}) {\n    const initialInputValue = 'Test value';\n    onSubmit('Submitted form data!');\n\n    throw new Error('Some error!');\n\n\n    return (\n        <div>\n            {title}\n            counter: {counter + 1}\n            {size && <Text inputSize={size} initial={initialInputValue}/>}\n        </div>\n    );\n}\n\nconst sizes = [5, 10, 20, 30, 40];\nconst initialValuesType = PropTypes.shape({\n    title: PropTypes.string,\n    size: PropTypes.number\n});\n\nForm.propTypes = {\n    title: PropTypes.string.isRequired,\n    size: PropTypes.oneOf(sizes),\n    onSubmit: PropTypes.func.isRequired,\n    counter: PropTypes.number,\n    initialValues: initialValuesType\n};\n\nForm.defaultProps = {\n    counter: 1\n};\n\nexport default Form;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false, errorInfo: null };\n    }\n\n    componentDidCatch(error, errorInfo) {\n       this.setState({\n           hasError: !!error,\n           errorInfo\n       })\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h2>Something went wrong!</h2>;\n        }\n        return this.props.children;\n    }\n}\n","import Form from '../Form/Form';\nimport React, {useState} from 'react';\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\n\nfunction UserPage({onSubmit, initialData}) {\n    const fromTitle = 'User creation form';\n    const inputSize = 5;\n    const [counter, setCounter] = useState(0);\n\n    const handleClickPlus = () => {\n        console.log('Clicked!');\n        setCounter(counter + 1);\n    };\n\n    const handleClickMinus = () => {\n        console.log('Clicked!');\n        setCounter(counter - 1);\n    };\n\n    const initialValues = {\n        title: 'New User',\n        size: 10\n    };\n\n    return (\n        <>\n            <ErrorBoundary>\n                <Form title={fromTitle} size={inputSize} onSubmit={onSubmit} initialValues={initialValues}/>\n            </ErrorBoundary>\n            <button type=\"button\" onClick={handleClickPlus}>Click+</button>\n            <button type=\"button\" onClick={handleClickMinus}>Click-</button>\n        </>\n    );\n}\n\nexport default UserPage;\n","import UserPage from '../components/UserPage/UserPage';\n\nfunction UserPageContainer() {\n    const initialData = {}; // from the back\n    const onFormSubmit = (formData) => {\n        // console.log('Form data:', formData);\n        console.log(formData);\n    };\n\n    return (\n        <UserPage onSubmit={onFormSubmit} initialData={initialData}/>\n    );\n}\n\nexport default UserPageContainer;\n","import UserPage from './containers/UserPage';\n\nfunction App() {\n    return (\n        <>\n            <UserPage/>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}