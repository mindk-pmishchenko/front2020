{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pavelmishchenko/WebstormProjects/front2020/src/containers/Users/UsersList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useCallback } from 'react';\nimport { useQuery, useMutation } from 'react-query';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport UsersList from \"../../components/UsersList/UsersList\";\nimport { getUsers, createUserRequest } from \"../../containers/Users/hooks/crud\";\nimport UserCreate from \"../../components/UserCreate/UserCreate\";\nexport const UsersContext = /*#__PURE__*/createContext([]);\nexport const CurrentUserContext = /*#__PURE__*/createContext({});\n\nfunction UsersListContainer() {\n  _s();\n\n  const {\n    data: response,\n    isFetching\n  } = useQuery('users', () => getUsers({\n    id: 1\n  }));\n  const users = (response === null || response === void 0 ? void 0 : response.data) || [];\n  const {\n    mutate: createUser\n  } = useMutation(createUserRequest);\n  const onSubmit = useCallback(async formData => {\n    try {\n      const data = await createUser(formData); // console.log('User id: ', id);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [createUser]);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: {\n      name: 'Vasya'\n    },\n    children: /*#__PURE__*/_jsxDEV(UsersContext.Provider, {\n      value: users,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: \"Users list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(UsersList, {\n            isFetching: isFetching\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(UserCreate, {\n            onSubmit: onSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UsersListContainer, \"lWMJcXCQj1b2paso6uL9wqJXGyI=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = UsersListContainer;\nexport default UsersListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersListContainer\");","map":{"version":3,"sources":["/Users/pavelmishchenko/WebstormProjects/front2020/src/containers/Users/UsersList.jsx"],"names":["React","createContext","useCallback","useQuery","useMutation","Card","CardContent","CardHeader","UsersList","getUsers","createUserRequest","UserCreate","UsersContext","CurrentUserContext","UsersListContainer","data","response","isFetching","id","users","mutate","createUser","onSubmit","formData","e","console","log","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,WAA9B,QAAgD,OAAhD;AACA,SACIC,QADJ,EAEIC,WAFJ,QAGO,aAHP;AAIA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAAQC,QAAR,EAAkBC,iBAAlB,QAA0C,mCAA1C;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AAEA,OAAO,MAAMC,YAAY,gBAAGX,aAAa,CAAC,EAAD,CAAlC;AACP,OAAO,MAAMY,kBAAkB,gBAAGZ,aAAa,CAAC,EAAD,CAAxC;;AAEP,SAASa,kBAAT,GAA8B;AAAA;;AAC1B,QAAM;AAACC,IAAAA,IAAI,EAAEC,QAAP;AAAiBC,IAAAA;AAAjB,MAA+Bd,QAAQ,CAAC,OAAD,EAAU,MAAMM,QAAQ,CAAC;AAACS,IAAAA,EAAE,EAAE;AAAL,GAAD,CAAxB,CAA7C;AACA,QAAMC,KAAK,GAAG,CAAAH,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAED,IAAV,KAAkB,EAAhC;AAEA,QAAM;AAACK,IAAAA,MAAM,EAAEC;AAAT,MAAuBjB,WAAW,CAACM,iBAAD,CAAxC;AAEA,QAAMY,QAAQ,GAAGpB,WAAW,CAAC,MAAMqB,QAAN,IAAkB;AAC3C,QAAI;AACA,YAAMR,IAAI,GAAG,MAAMM,UAAU,CAACE,QAAD,CAA7B,CADA,CAGA;AACH,KAJD,CAIE,OAAOC,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,GAR2B,EAQzB,CAACH,UAAD,CARyB,CAA5B;AAUA,sBACI,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAACM,MAAAA,IAAI,EAAE;AAAP,KAApC;AAAA,2BACI,QAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAER,KAA9B;AAAA,6BACI,QAAC,IAAD;AAAA,gCACA,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,WAAD;AAAA,kCACI,QAAC,SAAD;AAAW,YAAA,UAAU,EAAEF;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AAAY,YAAA,QAAQ,EAAEK;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA7BQR,kB;UACgCX,Q,EAGRC,W;;;KAJxBU,kB;AA+BT,eAAeA,kBAAf","sourcesContent":["import React, {createContext, useCallback} from 'react';\nimport {\n    useQuery,\n    useMutation\n} from 'react-query';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nimport UsersList from \"../../components/UsersList/UsersList\";\nimport {getUsers, createUserRequest} from \"../../containers/Users/hooks/crud\";\nimport UserCreate from \"../../components/UserCreate/UserCreate\";\n\nexport const UsersContext = createContext([]);\nexport const CurrentUserContext = createContext({});\n\nfunction UsersListContainer() {\n    const {data: response, isFetching} = useQuery('users', () => getUsers({id: 1}));\n    const users = response?.data || [];\n\n    const {mutate: createUser} = useMutation(createUserRequest);\n\n    const onSubmit = useCallback(async formData => {\n        try {\n            const data = await createUser(formData);\n\n            // console.log('User id: ', id);\n        } catch (e) {\n            console.log(e);\n        }\n    }, [createUser]);\n\n    return (\n        <CurrentUserContext.Provider value={{name: 'Vasya'}} >\n            <UsersContext.Provider value={users} >\n                <Card>\n                <CardHeader title=\"Users list\"/>\n                <CardContent>\n                    <UsersList isFetching={isFetching} />\n                    <UserCreate onSubmit={onSubmit} />\n                </CardContent>\n                </Card>\n            </UsersContext.Provider>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default UsersListContainer;\n"]},"metadata":{},"sourceType":"module"}