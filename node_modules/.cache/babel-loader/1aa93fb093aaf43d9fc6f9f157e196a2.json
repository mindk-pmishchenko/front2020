{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pavelmishchenko/WebstormProjects/front2020/src/components/Form/Form.jsx\";\nimport PropTypes from 'prop-types';\nimport Text from './components/Text/Text';\n\nfunction Form({\n  title,\n  size,\n  onSubmit,\n  counter,\n  initialValues,\n  userData\n}) {\n  const initialInputValue = 'Test value';\n  onSubmit('Submitted form data!');\n  throw new Error('Some error!');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [title, \"counter: \", counter + 1, size && /*#__PURE__*/_jsxDEV(Text, {\n      inputSize: size,\n      initial: initialInputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Form;\nconst sizes = [5, 10, 20, 30, 40];\nconst initialValuesType = PropTypes.shape({\n  title: PropTypes.string,\n  size: PropTypes.number\n});\nForm.propTypes = {\n  title: PropTypes.string.isRequired,\n  size: PropTypes.oneOf(sizes),\n  onSubmit: PropTypes.func.isRequired,\n  counter: PropTypes.number,\n  initialValues: initialValuesType\n};\nForm.defaultProps = {\n  counter: 1\n};\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/pavelmishchenko/WebstormProjects/front2020/src/components/Form/Form.jsx"],"names":["PropTypes","Text","Form","title","size","onSubmit","counter","initialValues","userData","initialInputValue","Error","sizes","initialValuesType","shape","string","number","propTypes","isRequired","oneOf","func","defaultProps"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA,OAAxB;AAAiCC,EAAAA,aAAjC;AAAgDC,EAAAA;AAAhD,CAAd,EAAyE;AACrE,QAAMC,iBAAiB,GAAG,YAA1B;AACAJ,EAAAA,QAAQ,CAAC,sBAAD,CAAR;AAEA,QAAM,IAAIK,KAAJ,CAAU,aAAV,CAAN;AAGA,sBACI;AAAA,eACKP,KADL,eAEcG,OAAO,GAAG,CAFxB,EAGKF,IAAI,iBAAI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEA,IAAjB;AAAuB,MAAA,OAAO,EAAEK;AAAhC;AAAA;AAAA;AAAA;AAAA,YAHb;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;KAdQP,I;AAgBT,MAAMS,KAAK,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,CAAd;AACA,MAAMC,iBAAiB,GAAGZ,SAAS,CAACa,KAAV,CAAgB;AACtCV,EAAAA,KAAK,EAAEH,SAAS,CAACc,MADqB;AAEtCV,EAAAA,IAAI,EAAEJ,SAAS,CAACe;AAFsB,CAAhB,CAA1B;AAKAb,IAAI,CAACc,SAAL,GAAiB;AACbb,EAAAA,KAAK,EAAEH,SAAS,CAACc,MAAV,CAAiBG,UADX;AAEbb,EAAAA,IAAI,EAAEJ,SAAS,CAACkB,KAAV,CAAgBP,KAAhB,CAFO;AAGbN,EAAAA,QAAQ,EAAEL,SAAS,CAACmB,IAAV,CAAeF,UAHZ;AAIbX,EAAAA,OAAO,EAAEN,SAAS,CAACe,MAJN;AAKbR,EAAAA,aAAa,EAAEK;AALF,CAAjB;AAQAV,IAAI,CAACkB,YAAL,GAAoB;AAChBd,EAAAA,OAAO,EAAE;AADO,CAApB;AAIA,eAAeJ,IAAf","sourcesContent":["import PropTypes from 'prop-types';\n\nimport Text from './components/Text/Text';\n\nfunction Form({title, size, onSubmit, counter, initialValues, userData}) {\n    const initialInputValue = 'Test value';\n    onSubmit('Submitted form data!');\n\n    throw new Error('Some error!');\n\n\n    return (\n        <div>\n            {title}\n            counter: {counter + 1}\n            {size && <Text inputSize={size} initial={initialInputValue}/>}\n        </div>\n    );\n}\n\nconst sizes = [5, 10, 20, 30, 40];\nconst initialValuesType = PropTypes.shape({\n    title: PropTypes.string,\n    size: PropTypes.number\n});\n\nForm.propTypes = {\n    title: PropTypes.string.isRequired,\n    size: PropTypes.oneOf(sizes),\n    onSubmit: PropTypes.func.isRequired,\n    counter: PropTypes.number,\n    initialValues: initialValuesType\n};\n\nForm.defaultProps = {\n    counter: 1\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}