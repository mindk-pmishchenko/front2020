{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pavelmishchenko/WebstormProjects/front2020/src/containers/Users/UsersList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from 'react';\nimport { useQuery, useMutation } from 'react-query';\nimport UsersList from \"../../components/UsersList/UsersList\";\nimport { getUsers } from \"../../containers/Users/hooks/crud\";\nexport const UsersContext = /*#__PURE__*/createContext([]);\nexport const CurrentUserContext = /*#__PURE__*/createContext({});\n\nfunction UsersListContainer() {\n  _s();\n\n  // const [users, setUsers] = useState([]);\n  //\n  // const getData = async () => {\n  //     const {data} = await getUsers({id: 1});\n  //     setUsers(data);\n  // };\n  //\n  // useEffect(getData, []);\n  const {\n    data: response,\n    isFetching\n  } = useQuery('users', () => getUsers({\n    id: 1\n  }));\n  const users = (response === null || response === void 0 ? void 0 : response.data) || [];\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: {\n      name: 'Vasya'\n    },\n    children: /*#__PURE__*/_jsxDEV(UsersContext.Provider, {\n      value: users,\n      children: /*#__PURE__*/_jsxDEV(UsersList, {\n        isFetching: isFetching\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UsersListContainer, \"8znuLGdOVHW3eXJkJQyzjTM5HV8=\", false, function () {\n  return [useQuery];\n});\n\n_c = UsersListContainer;\nexport default UsersListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersListContainer\");","map":{"version":3,"sources":["/Users/pavelmishchenko/WebstormProjects/front2020/src/containers/Users/UsersList.jsx"],"names":["React","useState","useEffect","createContext","useQuery","useMutation","UsersList","getUsers","UsersContext","CurrentUserContext","UsersListContainer","data","response","isFetching","id","users","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,aAApC,QAAwD,OAAxD;AACA,SACIC,QADJ,EAEIC,WAFJ,QAGO,aAHP;AAKA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAAQC,QAAR,QAAuB,mCAAvB;AAEA,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,EAAD,CAAlC;AACP,OAAO,MAAMM,kBAAkB,gBAAGN,aAAa,CAAC,EAAD,CAAxC;;AAEP,SAASO,kBAAT,GAA8B;AAAA;;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM;AAACC,IAAAA,IAAI,EAAEC,QAAP;AAAiBC,IAAAA;AAAjB,MAA+BT,QAAQ,CAAC,OAAD,EAAU,MAAMG,QAAQ,CAAC;AAACO,IAAAA,EAAE,EAAE;AAAL,GAAD,CAAxB,CAA7C;AACA,QAAMC,KAAK,GAAG,CAAAH,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAED,IAAV,KAAkB,EAAhC;AAEA,sBACI,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAACK,MAAAA,IAAI,EAAE;AAAP,KAApC;AAAA,2BACI,QAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAED,KAA9B;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,UAAU,EAAEF;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GApBQH,kB;UAUgCN,Q;;;KAVhCM,kB;AAsBT,eAAeA,kBAAf","sourcesContent":["import React, {useState, useEffect, createContext} from 'react';\nimport {\n    useQuery,\n    useMutation,\n} from 'react-query';\n\nimport UsersList from \"../../components/UsersList/UsersList\";\nimport {getUsers} from \"../../containers/Users/hooks/crud\";\n\nexport const UsersContext = createContext([]);\nexport const CurrentUserContext = createContext({});\n\nfunction UsersListContainer() {\n    // const [users, setUsers] = useState([]);\n    //\n    // const getData = async () => {\n    //     const {data} = await getUsers({id: 1});\n    //     setUsers(data);\n    // };\n    //\n    // useEffect(getData, []);\n\n    const {data: response, isFetching} = useQuery('users', () => getUsers({id: 1}));\n    const users = response?.data || [];\n\n    return (\n        <CurrentUserContext.Provider value={{name: 'Vasya'}} >\n            <UsersContext.Provider value={users} >\n                <UsersList isFetching={isFetching} />\n            </UsersContext.Provider>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default UsersListContainer;\n"]},"metadata":{},"sourceType":"module"}