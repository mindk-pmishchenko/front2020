{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pavelmishchenko/WebstormProjects/front2020/src/containers/Users/UsersList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useCallback, useEffect } from 'react';\nimport { useQuery, useMutation } from 'react-query';\nimport UsersList from \"../../components/UsersList/UsersList\";\nimport { getUsers, createUserRequest } from \"../../containers/Users/hooks/crud\";\nexport const UsersContext = /*#__PURE__*/createContext([]);\nexport const CurrentUserContext = /*#__PURE__*/createContext({});\n\nfunction UsersListContainer() {\n  _s();\n\n  const {\n    data: response,\n    isFetching\n  } = useQuery('users', () => getUsers({\n    id: 1\n  }));\n  const users = (response === null || response === void 0 ? void 0 : response.data) || [];\n  const {\n    mutate: createUser\n  } = useMutation(createUserRequest);\n  const onSubmit = useCallback(async formData => {\n    try {\n      const data = await createUser(formData); // console.log('User id: ', id);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [createUser]);\n  useEffect(() => onSubmit({\n    name: 'Ivan'\n  }), []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: {\n      name: 'Vasya'\n    },\n    children: /*#__PURE__*/_jsxDEV(UsersContext.Provider, {\n      value: users,\n      children: /*#__PURE__*/_jsxDEV(UsersList, {\n        isFetching: isFetching\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UsersListContainer, \"UQ5SmwlgVuLi5/OE8szc4Qo/ujA=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = UsersListContainer;\nexport default UsersListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersListContainer\");","map":{"version":3,"sources":["/Users/pavelmishchenko/WebstormProjects/front2020/src/containers/Users/UsersList.jsx"],"names":["React","createContext","useCallback","useEffect","useQuery","useMutation","UsersList","getUsers","createUserRequest","UsersContext","CurrentUserContext","UsersListContainer","data","response","isFetching","id","users","mutate","createUser","onSubmit","formData","e","console","log","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,WAA9B,EAA2CC,SAA3C,QAA2D,OAA3D;AACA,SACIC,QADJ,EAEIC,WAFJ,QAGO,aAHP;AAKA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAAQC,QAAR,EAAkBC,iBAAlB,QAA0C,mCAA1C;AAEA,OAAO,MAAMC,YAAY,gBAAGR,aAAa,CAAC,EAAD,CAAlC;AACP,OAAO,MAAMS,kBAAkB,gBAAGT,aAAa,CAAC,EAAD,CAAxC;;AAEP,SAASU,kBAAT,GAA8B;AAAA;;AAC1B,QAAM;AAACC,IAAAA,IAAI,EAAEC,QAAP;AAAiBC,IAAAA;AAAjB,MAA+BV,QAAQ,CAAC,OAAD,EAAU,MAAMG,QAAQ,CAAC;AAACQ,IAAAA,EAAE,EAAE;AAAL,GAAD,CAAxB,CAA7C;AACA,QAAMC,KAAK,GAAG,CAAAH,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAED,IAAV,KAAkB,EAAhC;AAEA,QAAM;AAACK,IAAAA,MAAM,EAAEC;AAAT,MAAuBb,WAAW,CAACG,iBAAD,CAAxC;AAEA,QAAMW,QAAQ,GAAGjB,WAAW,CAAC,MAAMkB,QAAN,IAAkB;AAC3C,QAAI;AACA,YAAMR,IAAI,GAAG,MAAMM,UAAU,CAACE,QAAD,CAA7B,CADA,CAGA;AACH,KAJD,CAIE,OAAOC,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,GAR2B,EAQzB,CAACH,UAAD,CARyB,CAA5B;AAUAf,EAAAA,SAAS,CAAC,MAAMgB,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAf,EAAiC,EAAjC,CAAT;AAEA,sBACI,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAACA,MAAAA,IAAI,EAAE;AAAP,KAApC;AAAA,2BACI,QAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAER,KAA9B;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,UAAU,EAAEF;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAzBQH,kB;UACgCP,Q,EAGRC,W;;;KAJxBM,kB;AA2BT,eAAeA,kBAAf","sourcesContent":["import React, {createContext, useCallback, useEffect} from 'react';\nimport {\n    useQuery,\n    useMutation\n} from 'react-query';\n\nimport UsersList from \"../../components/UsersList/UsersList\";\nimport {getUsers, createUserRequest} from \"../../containers/Users/hooks/crud\";\n\nexport const UsersContext = createContext([]);\nexport const CurrentUserContext = createContext({});\n\nfunction UsersListContainer() {\n    const {data: response, isFetching} = useQuery('users', () => getUsers({id: 1}));\n    const users = response?.data || [];\n\n    const {mutate: createUser} = useMutation(createUserRequest);\n\n    const onSubmit = useCallback(async formData => {\n        try {\n            const data = await createUser(formData);\n\n            // console.log('User id: ', id);\n        } catch (e) {\n            console.log(e);\n        }\n    }, [createUser]);\n\n    useEffect(() => onSubmit({name: 'Ivan'}), []);\n\n    return (\n        <CurrentUserContext.Provider value={{name: 'Vasya'}} >\n            <UsersContext.Provider value={users} >\n                <UsersList isFetching={isFetching} />\n            </UsersContext.Provider>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default UsersListContainer;\n"]},"metadata":{},"sourceType":"module"}