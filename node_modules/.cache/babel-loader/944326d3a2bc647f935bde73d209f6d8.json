{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pavelmishchenko/WebstormProjects/front2020/src/containers/Users/UsersList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from 'react';\nimport UsersList from \"../../components/UsersList/UsersList\";\nimport { getUsers } from \"../../containers/Users/hooks/crud\";\nimport { useQuery } from 'react-query';\nexport const UsersContext = /*#__PURE__*/createContext([]);\nexport const CurrentUserContext = /*#__PURE__*/createContext({});\n\nfunction UsersListContainer() {\n  _s();\n\n  const {\n    data: response,\n    isFetching\n  } = useQuery('users', () => getUsers({\n    id: 1\n  }));\n  console.log(response, isFetching);\n  const users = response === null || response === void 0 ? void 0 : response.data; // const [users, setUsers] = useState([]);\n  //\n  // const getData = async () => {\n  //     const {data} = await getUsers({id: 1});\n  //     setUsers(data);\n  // };\n  //\n  // useEffect(getData, []);\n  //\n  // const usersContext = {users, currentUser: {name: 'Vasya'}};\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: {\n      name: 'Vasya'\n    },\n    children: /*#__PURE__*/_jsxDEV(UsersContext.Provider, {\n      value: users,\n      children: /*#__PURE__*/_jsxDEV(UsersList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UsersListContainer, \"PL1bWXNmPEfhf+ziGl+nfJSmVpk=\", false, function () {\n  return [useQuery];\n});\n\n_c = UsersListContainer;\nexport default UsersListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersListContainer\");","map":{"version":3,"sources":["/Users/pavelmishchenko/WebstormProjects/front2020/src/containers/Users/UsersList.jsx"],"names":["React","useState","useEffect","createContext","UsersList","getUsers","useQuery","UsersContext","CurrentUserContext","UsersListContainer","data","response","isFetching","id","console","log","users","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,aAApC,QAAwD,OAAxD;AAEA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAAQC,QAAR,QAAuB,mCAAvB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,CAAC,EAAD,CAAlC;AACP,OAAO,MAAMK,kBAAkB,gBAAGL,aAAa,CAAC,EAAD,CAAxC;;AAEP,SAASM,kBAAT,GAA8B;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,IAAI,EAAEC,QAAR;AAAkBC,IAAAA;AAAlB,MAAgCN,QAAQ,CAAC,OAAD,EAAU,MAAMD,QAAQ,CAAC;AAACQ,IAAAA,EAAE,EAAE;AAAL,GAAD,CAAxB,CAA9C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAsBC,UAAtB;AACA,QAAMI,KAAK,GAAGL,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAED,IAAxB,CAH0B,CAK1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAACO,MAAAA,IAAI,EAAE;AAAP,KAApC;AAAA,2BACI,QAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAED,KAA9B;AAAA,6BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAvBQP,kB;UACiCH,Q;;;KADjCG,kB;AAyBT,eAAeA,kBAAf","sourcesContent":["import React, {useState, useEffect, createContext} from 'react';\n\nimport UsersList from \"../../components/UsersList/UsersList\";\nimport {getUsers} from \"../../containers/Users/hooks/crud\";\nimport { useQuery } from 'react-query';\n\nexport const UsersContext = createContext([]);\nexport const CurrentUserContext = createContext({});\n\nfunction UsersListContainer() {\n    const { data: response, isFetching } =useQuery('users', () => getUsers({id: 1}))\n    console.log(response, isFetching);\n    const users = response?.data;\n\n    // const [users, setUsers] = useState([]);\n    //\n    // const getData = async () => {\n    //     const {data} = await getUsers({id: 1});\n    //     setUsers(data);\n    // };\n    //\n    // useEffect(getData, []);\n    //\n    // const usersContext = {users, currentUser: {name: 'Vasya'}};\n\n    return (\n        <CurrentUserContext.Provider value={{name: 'Vasya'}} >\n            <UsersContext.Provider value={users} >\n                <UsersList />\n            </UsersContext.Provider>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default UsersListContainer;\n"]},"metadata":{},"sourceType":"module"}