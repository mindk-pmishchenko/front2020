{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pavelmishchenko/WebstormProjects/front2020/src/containers/Users/UsersList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext, useCallback } from 'react';\nimport UsersList from \"../../components/UsersList/UsersList\";\nimport { getUsers, updateUserProfile } from \"../../containers/Users/hooks/crud\";\nimport { useQuery, useMutation } from 'react-query';\nexport const UsersContext = /*#__PURE__*/createContext([]);\nexport const CurrentUserContext = /*#__PURE__*/createContext({});\n\nfunction UsersListContainer() {\n  _s();\n\n  const {\n    data: response,\n    isFetching\n  } = useQuery('users', () => getUsers({\n    id: 1\n  }));\n  const users = (response === null || response === void 0 ? void 0 : response.data) || [];\n  const {\n    mutate: createUser\n  } = useMutation(updateUserProfile);\n  const onSubmit = useCallback(async formData => {\n    try {\n      const {\n        data: {\n          id\n        }\n      } = await createUser(formData);\n      console.log(id);\n    } catch (e) {// TODO: add errors handling if needs\n    }\n  }, [createUser]);\n  useEffect(() => onSubmit({\n    name: \"Ivan\"\n  }), []); // const [users, setUsers] = useState([]);\n  //\n  // const getData = async () => {\n  //     const {data} = await getUsers({id: 1});\n  //     setUsers(data);\n  // };\n  //\n  // useEffect(getData, []);\n  //\n  // const usersContext = {users, currentUser: {name: 'Vasya'}};\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: {\n      name: 'Vasya'\n    },\n    children: /*#__PURE__*/_jsxDEV(UsersContext.Provider, {\n      value: users,\n      children: /*#__PURE__*/_jsxDEV(UsersList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UsersListContainer, \"XjMiYx4pJZTg7XmNRzEuGCUiZfw=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = UsersListContainer;\nexport default UsersListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersListContainer\");","map":{"version":3,"sources":["/Users/pavelmishchenko/WebstormProjects/front2020/src/containers/Users/UsersList.jsx"],"names":["React","useState","useEffect","createContext","useCallback","UsersList","getUsers","updateUserProfile","useQuery","useMutation","UsersContext","CurrentUserContext","UsersListContainer","data","response","isFetching","id","users","mutate","createUser","onSubmit","formData","console","log","e","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,aAApC,EAAmDC,WAAnD,QAAqE,OAArE;AAEA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAAQC,QAAR,EAAkBC,iBAAlB,QAA0C,mCAA1C;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,aAAtC;AAEA,OAAO,MAAMC,YAAY,gBAAGP,aAAa,CAAC,EAAD,CAAlC;AACP,OAAO,MAAMQ,kBAAkB,gBAAGR,aAAa,CAAC,EAAD,CAAxC;;AAEP,SAASS,kBAAT,GAA8B;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,IAAI,EAAEC,QAAR;AAAkBC,IAAAA;AAAlB,MAAgCP,QAAQ,CAAC,OAAD,EAAU,MAAMF,QAAQ,CAAC;AAACU,IAAAA,EAAE,EAAE;AAAL,GAAD,CAAxB,CAA9C;AACA,QAAMC,KAAK,GAAG,CAAAH,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAED,IAAV,KAAkB,EAAhC;AACA,QAAM;AAACK,IAAAA,MAAM,EAAEC;AAAT,MAAuBV,WAAW,CAACF,iBAAD,CAAxC;AAEA,QAAMa,QAAQ,GAAGhB,WAAW,CACxB,MAAMiB,QAAN,IAAkB;AACd,QAAI;AACA,YAAM;AACFR,QAAAA,IAAI,EAAE;AAAEG,UAAAA;AAAF;AADJ,UAEF,MAAMG,UAAU,CAACE,QAAD,CAFpB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;AACH,KALD,CAKE,OAAOQ,CAAP,EAAU,CACR;AACH;AACJ,GAVuB,EAWxB,CAACL,UAAD,CAXwB,CAA5B;AAcAjB,EAAAA,SAAS,CAAC,MAAMkB,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAf,EAAiC,EAAjC,CAAT,CAnB0B,CAqB1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAACA,MAAAA,IAAI,EAAE;AAAP,KAApC;AAAA,2BACI,QAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAER,KAA9B;AAAA,6BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAvCQL,kB;UACiCJ,Q,EAETC,W;;;KAHxBG,kB;AAyCT,eAAeA,kBAAf","sourcesContent":["import React, {useState, useEffect, createContext, useCallback} from 'react';\n\nimport UsersList from \"../../components/UsersList/UsersList\";\nimport {getUsers, updateUserProfile} from \"../../containers/Users/hooks/crud\";\nimport { useQuery, useMutation } from 'react-query';\n\nexport const UsersContext = createContext([]);\nexport const CurrentUserContext = createContext({});\n\nfunction UsersListContainer() {\n    const { data: response, isFetching } =useQuery('users', () => getUsers({id: 1}))\n    const users = response?.data || [];\n    const {mutate: createUser} = useMutation(updateUserProfile);\n\n    const onSubmit = useCallback(\n        async formData => {\n            try {\n                const {\n                    data: { id },\n                } = await createUser(formData);\n                console.log(id);\n            } catch (e) {\n                // TODO: add errors handling if needs\n            }\n        },\n        [createUser],\n    );\n\n    useEffect(() => onSubmit({name: \"Ivan\"}), []);\n\n    // const [users, setUsers] = useState([]);\n    //\n    // const getData = async () => {\n    //     const {data} = await getUsers({id: 1});\n    //     setUsers(data);\n    // };\n    //\n    // useEffect(getData, []);\n    //\n    // const usersContext = {users, currentUser: {name: 'Vasya'}};\n\n    return (\n        <CurrentUserContext.Provider value={{name: 'Vasya'}} >\n            <UsersContext.Provider value={users} >\n                <UsersList />\n            </UsersContext.Provider>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default UsersListContainer;\n"]},"metadata":{},"sourceType":"module"}