{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pavelmishchenko/WebstormProjects/front2020/src/components/UserCreate/UserCreate.jsx\";\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\n\nfunction UserCreate({\n  onSubmit\n}) {\n  const userSchema = Yup.object().shape({\n    firstName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required very important field')\n  });\n\n  const handleSubmit = data => {\n    console.log(data);\n    onSubmit(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"User Creation Form\", /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        firstName: ''\n      },\n      validationSchema: userSchema,\n      onSubmit: handleSubmit,\n      children: ({\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"firstName\",\n            name: \"firstName\",\n            placeholder: \"Enter first name...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this), errors.firstName && touched.firstName ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"jane@acme.com\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_c = UserCreate;\nexport default UserCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserCreate\");","map":{"version":3,"sources":["/Users/pavelmishchenko/WebstormProjects/front2020/src/components/UserCreate/UserCreate.jsx"],"names":["Formik","Field","Form","Yup","Button","UserCreate","onSubmit","userSchema","object","shape","firstName","string","min","max","required","handleSubmit","data","console","log","errors","touched"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,QAApC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,SAASC,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAAgC;AAE5B,QAAMC,UAAU,GAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AAClCC,IAAAA,SAAS,EAAEP,GAAG,CAACQ,MAAJ,GACNC,GADM,CACF,CADE,EACC,YADD,EAENC,GAFM,CAEF,EAFE,EAEE,WAFF,EAGNC,QAHM,CAGG,+BAHH;AADuB,GAAnB,CAAnB;;AAOA,QAAMC,YAAY,GAAGC,IAAI,IAAI;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAV,IAAAA,QAAQ,CAACU,IAAD,CAAR;AACH,GAHD;;AAKA,sBACI;AAAA,kDAEI,QAAC,MAAD;AACI,MAAA,aAAa,EAAE;AAACN,QAAAA,SAAS,EAAE;AAAZ,OADnB;AAEI,MAAA,gBAAgB,EAAEH,UAFtB;AAGI,MAAA,QAAQ,EAAEQ,YAHd;AAAA,gBAKK,CAAC;AAAEI,QAAAA,MAAF;AAAUC,QAAAA;AAAV,OAAD,kBACG,QAAC,IAAD;AAAA,gCACI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,EAAE,EAAC,WAAV;AAAsB,YAAA,IAAI,EAAC,WAA3B;AAAuC,YAAA,WAAW,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGKD,MAAM,CAACT,SAAP,IAAoBU,OAAO,CAACV,SAA5B,gBACG;AAAA,sBAAMS,MAAM,CAACT;AAAb;AAAA;AAAA;AAAA;AAAA,kBADH,GAEG,IALR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AACI,YAAA,EAAE,EAAC,OADP;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,WAAW,EAAC,eAHhB;AAII,YAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAmBI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,KAAK,EAAC,SAAlC;AAA4C,UAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH;;KAlDQL,U;AAoDT,eAAeA,UAAf","sourcesContent":["import { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\n\nfunction UserCreate({onSubmit}) {\n\n    const userSchema = Yup.object().shape({\n        firstName: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required very important field'),\n    });\n\n    const handleSubmit = data => {\n        console.log(data);\n        onSubmit(data);\n    };\n\n    return (\n        <div>\n          User Creation Form\n            <Formik\n                initialValues={{firstName: ''}}\n                validationSchema={userSchema}\n                onSubmit={handleSubmit}\n            >\n                {({ errors, touched }) => (\n                    <Form>\n                        <div>\n                            <label htmlFor=\"firstName\">First Name</label>\n                            <Field id=\"firstName\" name=\"firstName\" placeholder=\"Enter first name...\" />\n                            {errors.firstName && touched.firstName ? (\n                                <div>{errors.firstName}</div>\n                            ) : null}\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"email\">Email</label>\n                            <Field\n                                id=\"email\"\n                                name=\"email\"\n                                placeholder=\"jane@acme.com\"\n                                type=\"email\"\n                            />\n                        </div>\n\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n}\n\nexport default UserCreate;\n"]},"metadata":{},"sourceType":"module"}